{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"index"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Learn_docs/readme/","text":"diary_learn_quick_note \u662f\u4ee5\u5929\u4e3a\u5355\u4f4d\u8bb0\u5f55\u6bcf\u5929\u5b66\u4e60\u5185\u5bb9 \u5e76\u5173\u8054\u5230\u5176\u4ed6\u6587\u4ef6\u7b14\u8bb0\u4e2d CPP_learn_base \u662f\u6307\u4ece\u5934base\u5f00\u59cb\u5b66\u4e60\u7684\u7b14\u8bb0\uff0c\u5e94\u8be5\u5305\u542b\u7b2c\u4e00\u8bfe\uff0c\u7b2c\u4e8c\u8bfe\u8fd9\u6837\u7684\u76ee\u5f55 CPP_learn_quick \u662f\u6307\u5728\u4efb\u52a1\u6216\u8005\u5de5\u4f5c\u4e2d\u5b66\u5230\u7684\u67d0\u4e00\u70b9\u7684\u77e5\u8bc6\uff0c\u5e94\u8be5\u5305\u542b\u4ee5\u77e5\u8bc6\u5927\u7c7b\u7684\u76ee\u5f55 Transformers_learn_base BERT_learn_base GLUE text_classification","title":"Readme"},{"location":"Learn_docs/CPP/C%2B%2B%20primer/chapter2/","text":"\u5f00\u59cb\u5b66\u4e60C++ https://github.com/czs108/Cpp-Primer-5th-Notes-CN/tree/master/Chapter-2%20Variables%20and%20Basic%20Types","title":"\u5f00\u59cb\u5b66\u4e60C++"},{"location":"Learn_docs/CPP/C%2B%2B%20primer/chapter2/#c","text":"https://github.com/czs108/Cpp-Primer-5th-Notes-CN/tree/master/Chapter-2%20Variables%20and%20Basic%20Types","title":"\u5f00\u59cb\u5b66\u4e60C++"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/","text":"\u6570\u636e\u7c7b\u578b \u5185\u5b58\u3001\u5927\u5c0f\u7aef 0x12345678 \u600e\u4e48\u653e\u7f6e\u5230\u5185\u5b58\u4e2d\uff1f \u5c06\u6570\u636e\u7684\u4f4e\u4f4d\uff0878\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u653e\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c0f\u7aef\u65b9\u5f0f\uff0clittle endian \u5c06\u6570\u636e\u7684\u9ad8\u4f4d\uff0812\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u5f0f\uff0c\u5927\u7aef\u65b9\u5f0f\uff0cbig endian x86 \u82af\u7247\u3001ARM \u9ed8\u8ba4 \u5c0f\u7aef\u65b9\u5f0f\u3002 \u6709\u7b26\u53f7\u6574\u578b\u7f16\u7801 \u6709\u7b26\u53f7\u7f16\u7801\u65b9\u6848\uff1a\u8865\u7801\uff08CSAPP\uff09 \u89c4\u5219\uff1a \u6700\u9ad8\u4e3a\u4e3a\u7b26\u53f7\u4f4d\uff0c0\u8868\u793a\u662f\u6b63\u6570\uff0c1\u8868\u793a\u662f\u8d1f\u6570 \u5982\u4f55\u89e3\u91ca\u5341\u516d\u8fdb\u5236\uff1a\u4f9d\u7167\u4ee5\u4e0b\u516c\u5f0f\uff1a -1 (\u7b26\u53f7\u4f4d) 2^{\u82e5\u5e72\u6b21\u65b9} + (\u7b26\u53f7\u4f4e\u4e00\u4f4d)*2^{\u82e5\u5e72\u6b21\u65b9-1} + ... 0xFFFFFFFB => 1111 1111 1111 1111 1111 1111 1111 1011 -1*(2)^31 + (2)^30 + (2)^29 + ... 1*2^3 + 0*2^2 + 1*2^1 + 1*^0 \u8865\u7801\u7684\u4f18\u70b9\uff1a\u5f53\u6570\u636e\u957f\u5ea6\u6269\u5145\u662f\uff0c\u5f80\u9ad8\u4f4d\u8865\u7b26\u53f7\u4f4d\uff0c\u5219\u6570\u5b66\u4e0a\u7684\u503c\u662f\u4e0d\u53d8\u7684\u3002 \u6d6e\u70b9\u7f16\u7801 \u79d1\u5b66\u8ba1\u6570\u6cd5\uff1a\u6211\u8ba4\u4e3a\uff0c\u5b83\u4e3b\u8981\u662f\u89e3\u51b3\u4e86\u201c\u6570\u5b57\u552f\u4e00\u8868\u8fbe\u7684\u95ee\u9898\u201d 1234.567 == 1.234567 * 10^3 == 12.34567 * 10^2 == 0.1234567 * 10^4 \u5bf9\u4e8e\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6570\u5b57\uff0c3\u4e2a\u90e8\u5206\uff1a \u7b26\u53f7 \u6709\u6548\u6570\u5b57 \u6307\u6570 \u800c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u800c\u8a00\uff0c\u8fd8\u6709\u4e2a trick\uff1a\u6709\u6548\u6570\u5b57\u7684\u6574\u6570\u90e8\u5206\u4e0d\u8981\u5b58\uff08\u53ea\u53ef\u80fd\u662f1\uff09\u3002 \u5bf9\u4e8e float \u800c\u8a00\uff0c32 bit\uff1a \u7b26\u53f7\uff1a 1bit\uff0c 0\u4ee3\u8868\u6b63\u6570\uff0c1\u4ee3\u8868\u8d1f\u6570 \u6709\u6548\u6570\u5b57\uff1a23 bit \u6307\u6570\uff1a8bit\uff0c-128~127 \u4e0b\u9762\u5177\u4f53\u770b\u4e00\u4e0b\uff0c\u5982\u4f55\u5c06\u4e00\u4e2a\u5c0f\u6570\u7f16\u7801\u4e3a float\u3002 \u8f6c\u4e3a\u4e8c\u8fdb\u5236 \u8f6c\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5 \u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u6b65\u9aa4\uff0c\u627e\u51fa\u4e09\u4e2a\u90e8\u5206\u7684\u6570\u636e\u3002 \u6ce8\u610f \uff1a\u7f16\u7801\u65b9\u6848\u89c4\u5b9a\uff1a\u6307\u6570+127 \u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u5b58\u50a8\u3002 float fValue = 5.625f; // 101.101 // 1.01101 * 2^2 // \u7b26\u53f7: 0 // \u6307\u6570: 2+127 = 129 # 10000001 // 01101 // 0 10000001 01101000000000000000000 // 0100 0000 1011 0100 0000 0000 0000 0000 // 4 0 B 4 0 0 0 0 // 0x40b40000 double: 1, 11, 52 half: 1, 5, 10 2.5345882 \u6307\u9488 I \u6307\u9488\u7684\u5173\u952e\uff1a \u5730\u5740\u5728\u54ea\u91cc \u89e3\u91ca\u65b9\u5f0f\uff08sizeof + \u7f16\u7801\u65b9\u6848\uff09 void* \u8868\u793a \u53ea\u6709\u5730\u5740\uff0c\u6ca1\u6709\u89e3\u91ca\u65b9\u5f0f \u7684\u6307\u9488\u3002","title":"01 mem and pointer"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/#_2","text":"0x12345678 \u600e\u4e48\u653e\u7f6e\u5230\u5185\u5b58\u4e2d\uff1f \u5c06\u6570\u636e\u7684\u4f4e\u4f4d\uff0878\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u653e\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c0f\u7aef\u65b9\u5f0f\uff0clittle endian \u5c06\u6570\u636e\u7684\u9ad8\u4f4d\uff0812\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u5f0f\uff0c\u5927\u7aef\u65b9\u5f0f\uff0cbig endian x86 \u82af\u7247\u3001ARM \u9ed8\u8ba4 \u5c0f\u7aef\u65b9\u5f0f\u3002","title":"\u5185\u5b58\u3001\u5927\u5c0f\u7aef"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/#_3","text":"\u6709\u7b26\u53f7\u7f16\u7801\u65b9\u6848\uff1a\u8865\u7801\uff08CSAPP\uff09 \u89c4\u5219\uff1a \u6700\u9ad8\u4e3a\u4e3a\u7b26\u53f7\u4f4d\uff0c0\u8868\u793a\u662f\u6b63\u6570\uff0c1\u8868\u793a\u662f\u8d1f\u6570 \u5982\u4f55\u89e3\u91ca\u5341\u516d\u8fdb\u5236\uff1a\u4f9d\u7167\u4ee5\u4e0b\u516c\u5f0f\uff1a -1 (\u7b26\u53f7\u4f4d) 2^{\u82e5\u5e72\u6b21\u65b9} + (\u7b26\u53f7\u4f4e\u4e00\u4f4d)*2^{\u82e5\u5e72\u6b21\u65b9-1} + ... 0xFFFFFFFB => 1111 1111 1111 1111 1111 1111 1111 1011 -1*(2)^31 + (2)^30 + (2)^29 + ... 1*2^3 + 0*2^2 + 1*2^1 + 1*^0 \u8865\u7801\u7684\u4f18\u70b9\uff1a\u5f53\u6570\u636e\u957f\u5ea6\u6269\u5145\u662f\uff0c\u5f80\u9ad8\u4f4d\u8865\u7b26\u53f7\u4f4d\uff0c\u5219\u6570\u5b66\u4e0a\u7684\u503c\u662f\u4e0d\u53d8\u7684\u3002","title":"\u6709\u7b26\u53f7\u6574\u578b\u7f16\u7801"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/#_4","text":"\u79d1\u5b66\u8ba1\u6570\u6cd5\uff1a\u6211\u8ba4\u4e3a\uff0c\u5b83\u4e3b\u8981\u662f\u89e3\u51b3\u4e86\u201c\u6570\u5b57\u552f\u4e00\u8868\u8fbe\u7684\u95ee\u9898\u201d 1234.567 == 1.234567 * 10^3 == 12.34567 * 10^2 == 0.1234567 * 10^4 \u5bf9\u4e8e\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6570\u5b57\uff0c3\u4e2a\u90e8\u5206\uff1a \u7b26\u53f7 \u6709\u6548\u6570\u5b57 \u6307\u6570 \u800c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u800c\u8a00\uff0c\u8fd8\u6709\u4e2a trick\uff1a\u6709\u6548\u6570\u5b57\u7684\u6574\u6570\u90e8\u5206\u4e0d\u8981\u5b58\uff08\u53ea\u53ef\u80fd\u662f1\uff09\u3002 \u5bf9\u4e8e float \u800c\u8a00\uff0c32 bit\uff1a \u7b26\u53f7\uff1a 1bit\uff0c 0\u4ee3\u8868\u6b63\u6570\uff0c1\u4ee3\u8868\u8d1f\u6570 \u6709\u6548\u6570\u5b57\uff1a23 bit \u6307\u6570\uff1a8bit\uff0c-128~127 \u4e0b\u9762\u5177\u4f53\u770b\u4e00\u4e0b\uff0c\u5982\u4f55\u5c06\u4e00\u4e2a\u5c0f\u6570\u7f16\u7801\u4e3a float\u3002 \u8f6c\u4e3a\u4e8c\u8fdb\u5236 \u8f6c\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5 \u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u6b65\u9aa4\uff0c\u627e\u51fa\u4e09\u4e2a\u90e8\u5206\u7684\u6570\u636e\u3002 \u6ce8\u610f \uff1a\u7f16\u7801\u65b9\u6848\u89c4\u5b9a\uff1a\u6307\u6570+127 \u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u5b58\u50a8\u3002 float fValue = 5.625f; // 101.101 // 1.01101 * 2^2 // \u7b26\u53f7: 0 // \u6307\u6570: 2+127 = 129 # 10000001 // 01101 // 0 10000001 01101000000000000000000 // 0100 0000 1011 0100 0000 0000 0000 0000 // 4 0 B 4 0 0 0 0 // 0x40b40000 double: 1, 11, 52 half: 1, 5, 10 2.5345882","title":"\u6d6e\u70b9\u7f16\u7801"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/01-mem-and-pointer/#i","text":"\u6307\u9488\u7684\u5173\u952e\uff1a \u5730\u5740\u5728\u54ea\u91cc \u89e3\u91ca\u65b9\u5f0f\uff08sizeof + \u7f16\u7801\u65b9\u6848\uff09 void* \u8868\u793a \u53ea\u6709\u5730\u5740\uff0c\u6ca1\u6709\u89e3\u91ca\u65b9\u5f0f \u7684\u6307\u9488\u3002","title":"\u6307\u9488 I"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/","text":"\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u3001\u5185\u5b58\u7684\u5206\u533a\u3001\u6307\u9488 II \u6307\u9488\u76f8\u5173\u7684\u8fd0\u7b97 \u6307\u9488\u52a0\u6cd5 \u6307\u9488\u51cf\u6cd5 * -> \u6240\u8c13\u7684\u6307\u9488\u52a0\u51cf\u6cd5\uff0c\u5176\u5b9e\u4e0d\u662f\u6570\u5b66\u610f\u4e49\u4e0a\u7684\u52a0\u51cf\u3002 int main(int argc, char* argv[]) { int nValue = 0x12345678; int* p1 = &nValue; double* p2 = (double*)&nValue; char* p3 = (char*)&nValue; printf(\"%p\\n\", &nValue); getchar(); printf(\"%p\\n\", p1 + 1); getchar(); printf(\"%p\\n\", p2 + 1); getchar(); printf(\"%p\\n\", p3 + 1); getchar(); return 0; } \u5b83\u662f\u5305\u542b\u89e3\u91ca\u65b9\u5f0f\u7684\uff0c\u5982\u679c\u4ece\u7eaf\u6570\u503c\u516c\u5f0f\u4e0a\u770b\uff0c\u5176\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6307\u5411 T \u7c7b\u578b\u6570\u636e\u7684\u6307\u9488 p \uff1a p + i \uff0c\u5176\u4e2d i \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u6570\u5b57\u4e0a\u7684\u7ed3\u679c\uff1a p + i * sizeof(T) \u6307\u9488\u51cf\u53bb\u4e00\u4e2a\u6570\u503c\u7684\u8fd0\u7b97\u6cd5\u5219\uff0c\u4e0e\u52a0\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u91cd\u590d\u8bf4\u660e\u3002\u5982\u679c\u6709\u4e24\u4e2a\u540c\u7c7b\u578b\u6307\u9488\u76f8\u51cf\uff0c\u6700\u540e\u7684\u503c\uff1a (p2 - p1)/sieof(T) \u6570\u7ec4\u548c\u6307\u9488 \u5b9e\u9645\u4e0a\uff0c\u6570\u503c\u548c\u6307\u9488\u6709\u975e\u5e38\u7d27\u5bc6\u7684\u8054\u7cfb\uff0c\u4f53\u73b0\uff1a \u6570\u7ec4\u7684\u540d\u5b57\uff0c\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff08\u5e26\u89e3\u91ca\u65b9\u5f0f\uff09 \u6240\u8c13\u7684 ary[i] \u5b9e\u9645\u4e0a [] \u662f\u4e00\u4e2a \u8fd0\u7b97\u7b26 \uff0c\u5b83\u7684\u8fd0\u7b97\u89c4\u5219\u5206\u4e24\u6b65\uff1a\u7b2c\u4e00\u6b65\uff0c\u901a\u8fc7 \u6807\u5fd7\u7b26 + i \u7684\u516c\u5f0f\uff0c\u627e\u5230\u5730\u5740\uff1b\u7b2c\u4e8c\u6b65\uff1a\u6839\u636e\u89e3\u91ca\u65b9\u5f0f\uff0c\u628a\u90a3\u5757\u5730\u5740\u7684\u5185\u5bb9\u53d6\u51fa\u6765\u3002 int main(int argc, char* argv[]) { int nValueAry[10] = {0x12345678, 0x55667788}; int *p = (int*) ( (long long)nValueAry + 2 ); printf(\"%p, %p\\n\", nValueAry, p); getchar(); printf(\"%08X\\n\", *p); // 34 12 88 77 return 0; } printf(\"%08X\", 1[nValueAry] /* nValueAry[1]*/); \u6570\u7ec4\u5728\u4f20\u53c2\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9000\u5316\u4e3a\u6307\u9488 \uff1a \u53d8\u6210\u6307\u9488\u4e86\uff0c\u6240\u4ee5\u66f4\u7075\u6d3b\uff08\u53ef\u4ee5\u6539\u53d8\u503c\uff09 \u53d8\u6210\u6307\u9488\u4e86\uff0c\u4e22\u5931\u4e86\u4fe1\u606f\uff08\u4e0d\u77e5\u9053\u6570\u7ec4\u7684\u5927\u5c0f\uff09 int main(int argc, char* argv[]) { int nValueAry[15]; for(int i = 0; i < sizeof(nValueAry)/sizeof(nValueAry[0]); i++){ printf(\"%d\\n\", i); } return 0; } \u6570\u7ec4\u9000\u5316\u4e3a\u6307\u9488\u7684\u4f8b\u5b50\uff1a void myfun(int* nValueAry){ nValueAry = nValueAry + 1; for(int i = 0; i < sizeof(nValueAry)/sizeof(nValueAry[0]); i++){ printf(\"%d\\n\", i); } } int main(int argc, char* argv[]) { int nValueAry[15]; //nValueAry = nValueAry + 1; myfun(nValueAry); return 0; } \u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b \u51fd\u6570\u5728\u9ad8\u7ea7\u5c42\u6b21\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u591a\u7684\u590d\u7528\u4ee3\u7801\u3002 \u5728\u5e95\u5c42\u5176\u5b9e\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u7f16\u8bd1\u5668\u53ea\u9700\u8981\u5c06\u51fd\u6570\u7f16\u8bd1\u4e00\u6b21\uff08\u4e3a\u673a\u5668\u7801\uff09\uff0c\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u90fd\u662f\u590d\u7528\u7684\u90a3\u4e00\u4efd\u51fd\u6570\u4ee3\u7801\u3002 \u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u505a\u4e0d\u540c\u7684\u8c03\u7528\uff0c\u53c2\u6570\u3001\u8fd4\u56de\u503c\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u90a3\u5230\u5e95\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\u3002 \u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e0b\u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b\u3002\u51fd\u6570\u8c03\u7528\u5176\u5b9e\u4f1a\u7ecf\u5386\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4f20\u53c2 \u8fdb\u884c\u6d41\u7a0b\u8f6c\u79fb\uff08call \u6307\u4ee4\uff09\uff0c\u8f6c\u79fb\u7684\u540c\u65f6\uff0c\u4f1a\u4fdd\u5b58\u8fd4\u56de\u5730\u5740 \uff08\u65b0\u51fd\u6570\u4e2d\uff09\uff0c\u7533\u8bf7\u5c40\u90e8\u53d8\u91cf\u7684\u7a7a\u95f4 \u6267\u884c\u51fd\u6570\u6d41\u7a0b \u91ca\u653e\u5c40\u90e8\u53d8\u91cf\u7684\u7a7a\u95f4 \u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u7b2c 2 \u6b65\u4fdd\u5b58\u7684\u5730\u5740\uff0c\u5e76\u8fd4\u56de\u5230\u8be5\u5730\u5740 rbp \u4e0e rsp \u4e4b\u95f4\u7684\u7a7a\u95f4\uff0c\u5c31\u662f\u5f53\u524d\u51fd\u6570\u7684 \u201c\u6808\u5e27\u201d\u3002 \u6808\u5e27\u4e2d\u5305\u542b\u4e86\uff1a \u5c40\u90e8\u53d8\u91cf \u53c2\u6570 \u8fd4\u56de\u5730\u5740 \u4e0a\u4e00\u5c42\u6808\u5e27\u7684 rbp \u5176\u5b83\u7684\u5185\u5bb9\uff08\u5bc4\u5b58\u5668\u4ec0\u4e48\u7684\uff09 \u5f53\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u8fc7\u7a0b\u57fa\u672c\u4e0e\u4e0a\u9762\u6240\u8ff0\u76f8\u53cd\uff0c\u4e3b\u8981\u662f\u91ca\u653e\u6808\u5e27\u3002 \u4f5c\u4e1a \uff08\u4e0d\u501f\u52a9\u6807\u51c6\u5e93\u7684\u5b8f\uff09\u5b9e\u73b0\u4e00\u4e2a\u53ef\u53d8\u53c2\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u4efb\u610f\u591a\u4e2a\u6574\u6570\u7684\u603b\u548c\u3002","title":"\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u3001\u5185\u5b58\u7684\u5206\u533a\u3001\u6307\u9488 II"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/#ii","text":"","title":"\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u3001\u5185\u5b58\u7684\u5206\u533a\u3001\u6307\u9488 II"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/#_1","text":"\u6307\u9488\u52a0\u6cd5 \u6307\u9488\u51cf\u6cd5 * -> \u6240\u8c13\u7684\u6307\u9488\u52a0\u51cf\u6cd5\uff0c\u5176\u5b9e\u4e0d\u662f\u6570\u5b66\u610f\u4e49\u4e0a\u7684\u52a0\u51cf\u3002 int main(int argc, char* argv[]) { int nValue = 0x12345678; int* p1 = &nValue; double* p2 = (double*)&nValue; char* p3 = (char*)&nValue; printf(\"%p\\n\", &nValue); getchar(); printf(\"%p\\n\", p1 + 1); getchar(); printf(\"%p\\n\", p2 + 1); getchar(); printf(\"%p\\n\", p3 + 1); getchar(); return 0; } \u5b83\u662f\u5305\u542b\u89e3\u91ca\u65b9\u5f0f\u7684\uff0c\u5982\u679c\u4ece\u7eaf\u6570\u503c\u516c\u5f0f\u4e0a\u770b\uff0c\u5176\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6307\u5411 T \u7c7b\u578b\u6570\u636e\u7684\u6307\u9488 p \uff1a p + i \uff0c\u5176\u4e2d i \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u6570\u5b57\u4e0a\u7684\u7ed3\u679c\uff1a p + i * sizeof(T) \u6307\u9488\u51cf\u53bb\u4e00\u4e2a\u6570\u503c\u7684\u8fd0\u7b97\u6cd5\u5219\uff0c\u4e0e\u52a0\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u91cd\u590d\u8bf4\u660e\u3002\u5982\u679c\u6709\u4e24\u4e2a\u540c\u7c7b\u578b\u6307\u9488\u76f8\u51cf\uff0c\u6700\u540e\u7684\u503c\uff1a (p2 - p1)/sieof(T)","title":"\u6307\u9488\u76f8\u5173\u7684\u8fd0\u7b97"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/#_2","text":"\u5b9e\u9645\u4e0a\uff0c\u6570\u503c\u548c\u6307\u9488\u6709\u975e\u5e38\u7d27\u5bc6\u7684\u8054\u7cfb\uff0c\u4f53\u73b0\uff1a \u6570\u7ec4\u7684\u540d\u5b57\uff0c\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff08\u5e26\u89e3\u91ca\u65b9\u5f0f\uff09 \u6240\u8c13\u7684 ary[i] \u5b9e\u9645\u4e0a [] \u662f\u4e00\u4e2a \u8fd0\u7b97\u7b26 \uff0c\u5b83\u7684\u8fd0\u7b97\u89c4\u5219\u5206\u4e24\u6b65\uff1a\u7b2c\u4e00\u6b65\uff0c\u901a\u8fc7 \u6807\u5fd7\u7b26 + i \u7684\u516c\u5f0f\uff0c\u627e\u5230\u5730\u5740\uff1b\u7b2c\u4e8c\u6b65\uff1a\u6839\u636e\u89e3\u91ca\u65b9\u5f0f\uff0c\u628a\u90a3\u5757\u5730\u5740\u7684\u5185\u5bb9\u53d6\u51fa\u6765\u3002 int main(int argc, char* argv[]) { int nValueAry[10] = {0x12345678, 0x55667788}; int *p = (int*) ( (long long)nValueAry + 2 ); printf(\"%p, %p\\n\", nValueAry, p); getchar(); printf(\"%08X\\n\", *p); // 34 12 88 77 return 0; } printf(\"%08X\", 1[nValueAry] /* nValueAry[1]*/); \u6570\u7ec4\u5728\u4f20\u53c2\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9000\u5316\u4e3a\u6307\u9488 \uff1a \u53d8\u6210\u6307\u9488\u4e86\uff0c\u6240\u4ee5\u66f4\u7075\u6d3b\uff08\u53ef\u4ee5\u6539\u53d8\u503c\uff09 \u53d8\u6210\u6307\u9488\u4e86\uff0c\u4e22\u5931\u4e86\u4fe1\u606f\uff08\u4e0d\u77e5\u9053\u6570\u7ec4\u7684\u5927\u5c0f\uff09 int main(int argc, char* argv[]) { int nValueAry[15]; for(int i = 0; i < sizeof(nValueAry)/sizeof(nValueAry[0]); i++){ printf(\"%d\\n\", i); } return 0; } \u6570\u7ec4\u9000\u5316\u4e3a\u6307\u9488\u7684\u4f8b\u5b50\uff1a void myfun(int* nValueAry){ nValueAry = nValueAry + 1; for(int i = 0; i < sizeof(nValueAry)/sizeof(nValueAry[0]); i++){ printf(\"%d\\n\", i); } } int main(int argc, char* argv[]) { int nValueAry[15]; //nValueAry = nValueAry + 1; myfun(nValueAry); return 0; }","title":"\u6570\u7ec4\u548c\u6307\u9488"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/#_3","text":"\u51fd\u6570\u5728\u9ad8\u7ea7\u5c42\u6b21\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u591a\u7684\u590d\u7528\u4ee3\u7801\u3002 \u5728\u5e95\u5c42\u5176\u5b9e\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u7f16\u8bd1\u5668\u53ea\u9700\u8981\u5c06\u51fd\u6570\u7f16\u8bd1\u4e00\u6b21\uff08\u4e3a\u673a\u5668\u7801\uff09\uff0c\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u90fd\u662f\u590d\u7528\u7684\u90a3\u4e00\u4efd\u51fd\u6570\u4ee3\u7801\u3002 \u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u505a\u4e0d\u540c\u7684\u8c03\u7528\uff0c\u53c2\u6570\u3001\u8fd4\u56de\u503c\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u90a3\u5230\u5e95\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\u3002 \u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e0b\u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b\u3002\u51fd\u6570\u8c03\u7528\u5176\u5b9e\u4f1a\u7ecf\u5386\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u4f20\u53c2 \u8fdb\u884c\u6d41\u7a0b\u8f6c\u79fb\uff08call \u6307\u4ee4\uff09\uff0c\u8f6c\u79fb\u7684\u540c\u65f6\uff0c\u4f1a\u4fdd\u5b58\u8fd4\u56de\u5730\u5740 \uff08\u65b0\u51fd\u6570\u4e2d\uff09\uff0c\u7533\u8bf7\u5c40\u90e8\u53d8\u91cf\u7684\u7a7a\u95f4 \u6267\u884c\u51fd\u6570\u6d41\u7a0b \u91ca\u653e\u5c40\u90e8\u53d8\u91cf\u7684\u7a7a\u95f4 \u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u7b2c 2 \u6b65\u4fdd\u5b58\u7684\u5730\u5740\uff0c\u5e76\u8fd4\u56de\u5230\u8be5\u5730\u5740 rbp \u4e0e rsp \u4e4b\u95f4\u7684\u7a7a\u95f4\uff0c\u5c31\u662f\u5f53\u524d\u51fd\u6570\u7684 \u201c\u6808\u5e27\u201d\u3002 \u6808\u5e27\u4e2d\u5305\u542b\u4e86\uff1a \u5c40\u90e8\u53d8\u91cf \u53c2\u6570 \u8fd4\u56de\u5730\u5740 \u4e0a\u4e00\u5c42\u6808\u5e27\u7684 rbp \u5176\u5b83\u7684\u5185\u5bb9\uff08\u5bc4\u5b58\u5668\u4ec0\u4e48\u7684\uff09 \u5f53\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u8fc7\u7a0b\u57fa\u672c\u4e0e\u4e0a\u9762\u6240\u8ff0\u76f8\u53cd\uff0c\u4e3b\u8981\u662f\u91ca\u653e\u6808\u5e27\u3002","title":"\u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/02-pointerII-fun-stack/#_4","text":"\uff08\u4e0d\u501f\u52a9\u6807\u51c6\u5e93\u7684\u5b8f\uff09\u5b9e\u73b0\u4e00\u4e2a\u53ef\u53d8\u53c2\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u4efb\u610f\u591a\u4e2a\u6574\u6570\u7684\u603b\u548c\u3002","title":"\u4f5c\u4e1a"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/","text":"\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40 \u6307\u9488 III int main(int argc, char* argv[]) { int (__cdecl *pfn)(int nCount, ...) = myadd; pfn(10, 20, 30); int ary[10][10]; int (*p)[10] = ary; printf(\"%p, %p, %p\\n\", ary, p, p+1); return 0; } \u5185\u5b58\u7684\u5206\u533a \u4e00\u4e2a\u7a0b\u5e8f\u542f\u52a8\u540e\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u662f\u201c\u5206\u533a\u7ba1\u7406\u201d\u7684\u3002 \u6808\uff0c\u968f\u7740\u51fd\u6570\u8c03\u7528\u88ab\u81ea\u52a8\u5206\u914d\u548c\u56de\u6536\u7684\u4e00\u5757\u533a\u57df\uff0c\u914d\u5408\u51fd\u6570\u6808\u5e27\u7684\u4e00\u5757\u5185\u5b58 \u5168\u5c40\uff0c\u751f\u547d\u5468\u671f\u5f00\u59cb\u65e9\u4e8e main\uff0c\u7ed3\u675f\u8981\u665a\u4e8e main\u3002\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08static\uff09\uff0c\u51fd\u6570\u673a\u5668\u7801 \u5806\uff0c\u9700\u8981\u624b\u5de5\u7ba1\u7406\uff08malloc\u3001free\uff09 \u5168\u5c40\u533a\u7684\u7a7a\u95f4\u6bd4\u8f83\u5927\u3002\u6808\u7684\u7a7a\u95f4\u6bd4\u8f83\u72ed\u9698\u3002 \u7ed3\u6784\u4f53\u53ca\u5176\u5185\u5b58\u5e03\u5c40 \u7ed3\u6784\u4f53\u5176\u5b9e\u5c31\u662f\u5404\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u65f6\u5185\u5b58\u5e03\u5c40\u7684\u89c4\u5f8b\uff1a \u6700\u5f00\u59cb\u7684\u6210\u5458\uff0c\u51fa\u73b0\u5728\u7ed3\u6784\u4f53\u7684\u5934\u90e8\uff08\u9996\u5730\u5740\uff09 \u5148\u5b9a\u4e49\u7684\u6210\u5458\u51fa\u73b0\u5728\u4f4e\u5730\u5740\uff0c\u540e\u5b9a\u4e49\u7684\u4f9d\u6b21\u51fa\u73b0\u5728\u9ad8\u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u662f\u201c\u7d27\u5bc6\u201d\u8fde\u63a5\u7684 \u7279\u6b8a\u60c5\u51b5\u662f\uff1a\u201c\u5bf9\u9f50\u201d \u5bf9\u9f50 #include <stdio.h> #include <string.h> struct tagOneFlow{ char chValue; char chValue2; int nId1; double nId0; }; int main(int argc, char* argv[]) { printf(\"%lu\\r\\n\", sizeof(tagOneFlow)); return 0; } \u5bf9\u9f50 trick\uff1a struct tagOneFlow{// offset char chValue; // 0 char chValue2; // 1 int nId1; // 4 double nId0; // 8 }; struct tagOneFlow2{// offset char chValue; // 0 int nId1; // 4 char chValue2; // 8 double nId0; // 16 }; int main(int argc, char* argv[]) { printf(\"%lu\\r\\n\", sizeof(tagOneFlow2)); return 0; } \u53c2\u9605\uff1a gcc __attribute__((aligned(64))) http://www.catb.org/esr/structure-packing/ \u7ed3\u6784\u4f53\u6307\u9488 -> \u5de5\u4f5c\u662f\u5206\u4e24\u6b65\u7684\uff1a \u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u9996\u5730\u5740 \u6839\u636e\u9996\u5730\u5740\u548c\u6210\u5458\u7684\u504f\u79fb\uff0c\u5f97\u5230\u6210\u5458\u7684\u5185\u5b58\u5730\u5740 \u6309\u7167\u89e3\u91ca\u65b9\u5f0f\uff0c\u628a\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u53d6\u51fa\u6765 \u53ef\u5426\u8bbe\u8ba1\u4e00\u4e2a\u5b8f\uff0c\u53ef\u4ee5\u8ba1\u7b97\u7ed3\u6784\u4f53\u6210\u5458\u7684\u504f\u79fb\uff1f #define offset_tag(s, m) ((long int)(&(((tagOneFlow*)(0))->m)))","title":"\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#_1","text":"","title":"\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#iii","text":"int main(int argc, char* argv[]) { int (__cdecl *pfn)(int nCount, ...) = myadd; pfn(10, 20, 30); int ary[10][10]; int (*p)[10] = ary; printf(\"%p, %p, %p\\n\", ary, p, p+1); return 0; }","title":"\u6307\u9488 III"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#_2","text":"\u4e00\u4e2a\u7a0b\u5e8f\u542f\u52a8\u540e\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u662f\u201c\u5206\u533a\u7ba1\u7406\u201d\u7684\u3002 \u6808\uff0c\u968f\u7740\u51fd\u6570\u8c03\u7528\u88ab\u81ea\u52a8\u5206\u914d\u548c\u56de\u6536\u7684\u4e00\u5757\u533a\u57df\uff0c\u914d\u5408\u51fd\u6570\u6808\u5e27\u7684\u4e00\u5757\u5185\u5b58 \u5168\u5c40\uff0c\u751f\u547d\u5468\u671f\u5f00\u59cb\u65e9\u4e8e main\uff0c\u7ed3\u675f\u8981\u665a\u4e8e main\u3002\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08static\uff09\uff0c\u51fd\u6570\u673a\u5668\u7801 \u5806\uff0c\u9700\u8981\u624b\u5de5\u7ba1\u7406\uff08malloc\u3001free\uff09 \u5168\u5c40\u533a\u7684\u7a7a\u95f4\u6bd4\u8f83\u5927\u3002\u6808\u7684\u7a7a\u95f4\u6bd4\u8f83\u72ed\u9698\u3002","title":"\u5185\u5b58\u7684\u5206\u533a"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#_3","text":"\u7ed3\u6784\u4f53\u5176\u5b9e\u5c31\u662f\u5404\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u65f6\u5185\u5b58\u5e03\u5c40\u7684\u89c4\u5f8b\uff1a \u6700\u5f00\u59cb\u7684\u6210\u5458\uff0c\u51fa\u73b0\u5728\u7ed3\u6784\u4f53\u7684\u5934\u90e8\uff08\u9996\u5730\u5740\uff09 \u5148\u5b9a\u4e49\u7684\u6210\u5458\u51fa\u73b0\u5728\u4f4e\u5730\u5740\uff0c\u540e\u5b9a\u4e49\u7684\u4f9d\u6b21\u51fa\u73b0\u5728\u9ad8\u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u662f\u201c\u7d27\u5bc6\u201d\u8fde\u63a5\u7684 \u7279\u6b8a\u60c5\u51b5\u662f\uff1a\u201c\u5bf9\u9f50\u201d","title":"\u7ed3\u6784\u4f53\u53ca\u5176\u5185\u5b58\u5e03\u5c40"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#_4","text":"#include <stdio.h> #include <string.h> struct tagOneFlow{ char chValue; char chValue2; int nId1; double nId0; }; int main(int argc, char* argv[]) { printf(\"%lu\\r\\n\", sizeof(tagOneFlow)); return 0; } \u5bf9\u9f50 trick\uff1a struct tagOneFlow{// offset char chValue; // 0 char chValue2; // 1 int nId1; // 4 double nId0; // 8 }; struct tagOneFlow2{// offset char chValue; // 0 int nId1; // 4 char chValue2; // 8 double nId0; // 16 }; int main(int argc, char* argv[]) { printf(\"%lu\\r\\n\", sizeof(tagOneFlow2)); return 0; } \u53c2\u9605\uff1a gcc __attribute__((aligned(64))) http://www.catb.org/esr/structure-packing/","title":"\u5bf9\u9f50"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/03-mem-of-structure/#_5","text":"-> \u5de5\u4f5c\u662f\u5206\u4e24\u6b65\u7684\uff1a \u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u9996\u5730\u5740 \u6839\u636e\u9996\u5730\u5740\u548c\u6210\u5458\u7684\u504f\u79fb\uff0c\u5f97\u5230\u6210\u5458\u7684\u5185\u5b58\u5730\u5740 \u6309\u7167\u89e3\u91ca\u65b9\u5f0f\uff0c\u628a\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u53d6\u51fa\u6765 \u53ef\u5426\u8bbe\u8ba1\u4e00\u4e2a\u5b8f\uff0c\u53ef\u4ee5\u8ba1\u7b97\u7ed3\u6784\u4f53\u6210\u5458\u7684\u504f\u79fb\uff1f #define offset_tag(s, m) ((long int)(&(((tagOneFlow*)(0))->m)))","title":"\u7ed3\u6784\u4f53\u6307\u9488"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/","text":"C++ \u5f00\u59cb \u8054\u5408\u4f53\u3001\u679a\u4e3e #include <stdio.h> #include <string.h> union MyUnion { double a; int b; }; int main(int argc, char* argv[]) { MyUnion u; u.a = 3.14; u.b = 0x12345678; return 0; } \u8054\u5408\u4f53\u7684\u7279\u70b9\uff1a \u6240\u6709\u6210\u5458\u5171\u7528\u540c\u4e00\u5757\u5185\u5b58\uff08\u9996\u5730\u5740\u90fd\u4e00\u6837\uff09 \u8054\u5408\u4f53\u53d8\u91cf\u7684\u5927\u5c0f\uff0c\u662f\u6210\u5458\u4e2d\u6700\u5927\u8005 \u8054\u5408\u4f53\u4e00\u822c\u53ef\u4ee5\u7528\u6765\u505a\u7c7b\u578b\u8f6c\u6362\u7b49\uff1a #include <stdio.h> #include <string.h> union MyUnion { double a; unsigned char chAry[sizeof(double)]; }; int main(int argc, char* argv[]) { MyUnion u; u.a = 3.14; for(int i = 0; i < sizeof(double); i++){ printf(\"%02X \", u.chAry[i]); } return 0; } \u4ece C \u5230 C++ \u5148\u8c08\u7b80\u5355\u7684\u4e00\u4e9b C \u5230 C++ \u7684\u7ec6\u8282\uff1a \u589e\u52a0\u4e86 bool \u7c7b\u578b \u589e\u52a0\u4e86 nullptr \u5173\u952e\u5b57\uff08\u4ee3\u66ff NULL\uff09 \u652f\u6301\u51fd\u6570\u91cd\u8f7d \u652f\u6301\u5757\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u53d8\u91cf \u652f\u6301\u540d\u79f0\u7a7a\u95f4 \u51fd\u6570\u91cd\u8f7d\u3001\u540d\u79f0\u7a7a\u95f4\u5176\u5b9e\u90fd\u662f\u5229\u7528\u201c\u540d\u79f0\u7c89\u788e\u201d\u7684(name dangling)\u6280\u672f\u505a\u7684\u3002c++filt \u53ef\u4ee5\u590d\u539f\u540d\u79f0\u3002 (oneflow-dev) yaochi@7275806cee0b:~/cmake_example/build$ c++filt _Z5myfunii myfun(int, int) C++ \u4e2d\u7684\u7c7b \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5230\u5e95\u662f\u54ea\u4e2a\u8303\u7574\u7684\u4e1c\u897f\uff0c\u5bf9\u7b49\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\uff1f \u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u201c\u5982\u4f55\u505a\u62bd\u8c61\u201d\u8303\u7574\u7684\u4e1c\u897f\uff0c\u5c5e\u4e8e\u65b9\u6cd5\u8bba\uff0c\u5b83\u5bf9\u7b49\u7684\u4e1c\u897f\uff1a\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\uff1bActor\u3002 \u4f7f\u7528 C \u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u3002\u9762\u5411\u5bf9\u8c61\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u628a\u4e8b\u52a1\u62bd\u8c61\u6210\u201c\u5bf9\u8c61\u201d\uff0c\u800c\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u6027\uff1a\u7ee7\u627f\u3001\u5c01\u88c5\u3001\u591a\u6001\u548c\u4eba\u7684\u76f4\u89c9\u6bd4\u8f83\u543b\u5408\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u4eba\u62bd\u8c61\u95ee\u9898\u7684\u95e8\u69db\u3002 \u5c01\u88c5 \u6240\u8c13\u7684\u5c01\u88c5\uff0c\u5176\u5b9e\u5c31\u662f\u628a \u201c\u6570\u636e\u201d\u548c\u201c\u52a8\u4f5c\u201d\u6253\u5305\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u5728 C \u4e2d\uff0c\u7528\u51fd\u6570\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u505a\u5230\u5c01\u88c5\uff1a #include <stdio.h> #include <string.h> struct tagFile{ FILE * m_pFile = NULL; FILE* (*m_fpn_open)(const char *pathname, const char *mode)=fopen; size_t (*m_fpn_write)(const void *ptr, size_t size, size_t nmemb, FILE *stream) = fwrite; int (*m_fpn_close)(FILE *stream) = fclose; }; int main(int argc, char* argv[]) { struct tagFile myfile_obj; myfile_obj.m_pFile = myfile_obj.m_fpn_open(\"xxx.tmp\", \"wb\"); myfile_obj.m_fpn_write(\"helloworkd\", 10, 1, myfile_obj.m_pFile); myfile_obj.m_fpn_close(myfile_obj.m_pFile); return 0; } C++ \u5728\u8bed\u6cd5\u5c42\u6b21\u63d0\u4f9b\u4e86\u201c\u5c01\u88c5\u201d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 \u201c\u7c7b\u4e2d\u5b9a\u4e49\u65b9\u6cd5\u201d\uff0c\u5e76\u76f4\u63a5\u7528 \u5bf9\u8c61.\u65b9\u6cd5() \u7684\u65b9\u5f0f\u8c03\u7528\uff1a #include <stdio.h> #include <string.h> struct tagFile{ FILE * m_pFile = NULL; FILE* open(const char* path, const char* mode){ m_pFile = fopen(path, mode); return m_pFile; } }; int main(int argc, char* argv[]) { struct tagFile myfile_obj; myfile_obj.open(\"xxxx2.tmp\", \"wb\"); struct tagFile myfile_obj2; myfile_obj2.open(\"xxx_two.tmp\", \"wb\"); return 0; } \u6240\u8c13\u5bf9\u8c61\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u5176\u5b9e\u662f\u7f16\u8bd1\u5077\u5077\u505a\u4e86\u5c0f\u52a8\u4f5c\uff0c\u5373 \u5bf9\u8c61.\u65b9\u6cd5\u8c03\u7528(...) \u7b49\u4ef7\u4e8e \u51fd\u6570\u8c03\u7528(&\u5bf9\u8c61, ..) \u3002 \u77e5\u9053\u8fd9\u4e2a\u4e4b\u540e\uff0c\u5f88\u591a C++ \u7684\u4e0a\u5c42\u8bed\u6cd5\u662f\u53ef\u4ee5\u8054\u7cfb\u5230\u4e00\u8d77\u7684\u3002 \u6bd4\u5982\uff1a C++ \u4e2d\u7684 const \u65b9\u6cd5 \uff0c\u5176\u5b9e\u5c31\u662f\u4f20\u9012\u4e86\u4e00\u4e2a const * const \u7c7b\u578b\u7684 this \u6307\u9488\u3002 \u518d\u6bd4\u5982\uff1a static \u65b9\u6cd5\u3002 \u56de\u987e\u4e0b C \u4e2d static \u5173\u952e\u5b57\u7684\u4f5c\u7528\uff1a \u4fee\u9970\u5c40\u90e8\u53d8\u91cf\u7684\u8bdd\uff0c\u5b83\u5176\u5b9e\u5f97\u5230\u201c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u201d\uff0c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u7684\u7279\u70b9\uff1a\u58f0\u660e\u5468\u671f\u7b49\u540c\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u4f5c\u7528\u57df\u88ab\u9650\u5b9a\u5728\u4e86\u51fd\u6570\u4f5c\u7528\u57df\u3002 \u4fee\u9970\u51fd\u6570\uff0c\u5c31\u5f97\u5230\u201c\u5c40\u90e8\u9759\u6001\u51fd\u6570\u201d\uff0c\u5b83\u5176\u5b9e\u548c\u666e\u901a\u51fd\u6570\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u9650\u5b9a\u5728\u6587\u4ef6\u4f5c\u7528\u57df C++ \u4e2d\uff0c static \u5173\u952e\u5b57\u7684\u4f5c\u7528\uff1a \u4fee\u9970\u65b9\u6cd5\u7684\u8bdd\uff0c\u5f97\u5230\u201c\u9759\u6001\u6210\u5458\u65b9\u6cd5\u201d\uff0c\u7b49\u4e8e\u4e8e\u5168\u5c40\u51fd\u6570\uff08\u6362\u8a00\u4e4b\uff0c\u8c03\u7528\u65f6\u4e0d\u4f1a\u4f20\u9012 this \u6307\u9488\uff09\uff0c\u53ea\u4e0d\u8fc7\u88ab\u9650\u5b9a\u5728\u4e86\u7c7b\u4f5c\u7528\u57df\u3002 \u4fee\u9970\u7c7b\u6210\u5458\u7684\u8bdd\uff0c\u5f97\u5230\u4e86\u201c\u9759\u6001\u6210\u5458\u201d\uff0c\u7b49\u540c\u4e8e\u5168\u5c40\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u88ab\u9650\u5b9a\u5728\u7c7b\u4f5c\u7528\u57df","title":"C++ \u5f00\u59cb"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/#c","text":"","title":"C++ \u5f00\u59cb"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/#_1","text":"#include <stdio.h> #include <string.h> union MyUnion { double a; int b; }; int main(int argc, char* argv[]) { MyUnion u; u.a = 3.14; u.b = 0x12345678; return 0; } \u8054\u5408\u4f53\u7684\u7279\u70b9\uff1a \u6240\u6709\u6210\u5458\u5171\u7528\u540c\u4e00\u5757\u5185\u5b58\uff08\u9996\u5730\u5740\u90fd\u4e00\u6837\uff09 \u8054\u5408\u4f53\u53d8\u91cf\u7684\u5927\u5c0f\uff0c\u662f\u6210\u5458\u4e2d\u6700\u5927\u8005 \u8054\u5408\u4f53\u4e00\u822c\u53ef\u4ee5\u7528\u6765\u505a\u7c7b\u578b\u8f6c\u6362\u7b49\uff1a #include <stdio.h> #include <string.h> union MyUnion { double a; unsigned char chAry[sizeof(double)]; }; int main(int argc, char* argv[]) { MyUnion u; u.a = 3.14; for(int i = 0; i < sizeof(double); i++){ printf(\"%02X \", u.chAry[i]); } return 0; }","title":"\u8054\u5408\u4f53\u3001\u679a\u4e3e"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/#c-c","text":"\u5148\u8c08\u7b80\u5355\u7684\u4e00\u4e9b C \u5230 C++ \u7684\u7ec6\u8282\uff1a \u589e\u52a0\u4e86 bool \u7c7b\u578b \u589e\u52a0\u4e86 nullptr \u5173\u952e\u5b57\uff08\u4ee3\u66ff NULL\uff09 \u652f\u6301\u51fd\u6570\u91cd\u8f7d \u652f\u6301\u5757\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u53d8\u91cf \u652f\u6301\u540d\u79f0\u7a7a\u95f4 \u51fd\u6570\u91cd\u8f7d\u3001\u540d\u79f0\u7a7a\u95f4\u5176\u5b9e\u90fd\u662f\u5229\u7528\u201c\u540d\u79f0\u7c89\u788e\u201d\u7684(name dangling)\u6280\u672f\u505a\u7684\u3002c++filt \u53ef\u4ee5\u590d\u539f\u540d\u79f0\u3002 (oneflow-dev) yaochi@7275806cee0b:~/cmake_example/build$ c++filt _Z5myfunii myfun(int, int)","title":"\u4ece C \u5230 C++"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/#c_1","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5230\u5e95\u662f\u54ea\u4e2a\u8303\u7574\u7684\u4e1c\u897f\uff0c\u5bf9\u7b49\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\uff1f \u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u201c\u5982\u4f55\u505a\u62bd\u8c61\u201d\u8303\u7574\u7684\u4e1c\u897f\uff0c\u5c5e\u4e8e\u65b9\u6cd5\u8bba\uff0c\u5b83\u5bf9\u7b49\u7684\u4e1c\u897f\uff1a\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\uff1bActor\u3002 \u4f7f\u7528 C \u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u3002\u9762\u5411\u5bf9\u8c61\u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u628a\u4e8b\u52a1\u62bd\u8c61\u6210\u201c\u5bf9\u8c61\u201d\uff0c\u800c\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u6027\uff1a\u7ee7\u627f\u3001\u5c01\u88c5\u3001\u591a\u6001\u548c\u4eba\u7684\u76f4\u89c9\u6bd4\u8f83\u543b\u5408\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u4eba\u62bd\u8c61\u95ee\u9898\u7684\u95e8\u69db\u3002","title":"C++ \u4e2d\u7684\u7c7b"},{"location":"Learn_docs/CPP/CPP_oneflow_shcool/04-from-c-to-cpp/#_2","text":"\u6240\u8c13\u7684\u5c01\u88c5\uff0c\u5176\u5b9e\u5c31\u662f\u628a \u201c\u6570\u636e\u201d\u548c\u201c\u52a8\u4f5c\u201d\u6253\u5305\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u5728 C \u4e2d\uff0c\u7528\u51fd\u6570\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u505a\u5230\u5c01\u88c5\uff1a #include <stdio.h> #include <string.h> struct tagFile{ FILE * m_pFile = NULL; FILE* (*m_fpn_open)(const char *pathname, const char *mode)=fopen; size_t (*m_fpn_write)(const void *ptr, size_t size, size_t nmemb, FILE *stream) = fwrite; int (*m_fpn_close)(FILE *stream) = fclose; }; int main(int argc, char* argv[]) { struct tagFile myfile_obj; myfile_obj.m_pFile = myfile_obj.m_fpn_open(\"xxx.tmp\", \"wb\"); myfile_obj.m_fpn_write(\"helloworkd\", 10, 1, myfile_obj.m_pFile); myfile_obj.m_fpn_close(myfile_obj.m_pFile); return 0; } C++ \u5728\u8bed\u6cd5\u5c42\u6b21\u63d0\u4f9b\u4e86\u201c\u5c01\u88c5\u201d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 \u201c\u7c7b\u4e2d\u5b9a\u4e49\u65b9\u6cd5\u201d\uff0c\u5e76\u76f4\u63a5\u7528 \u5bf9\u8c61.\u65b9\u6cd5() \u7684\u65b9\u5f0f\u8c03\u7528\uff1a #include <stdio.h> #include <string.h> struct tagFile{ FILE * m_pFile = NULL; FILE* open(const char* path, const char* mode){ m_pFile = fopen(path, mode); return m_pFile; } }; int main(int argc, char* argv[]) { struct tagFile myfile_obj; myfile_obj.open(\"xxxx2.tmp\", \"wb\"); struct tagFile myfile_obj2; myfile_obj2.open(\"xxx_two.tmp\", \"wb\"); return 0; } \u6240\u8c13\u5bf9\u8c61\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u5176\u5b9e\u662f\u7f16\u8bd1\u5077\u5077\u505a\u4e86\u5c0f\u52a8\u4f5c\uff0c\u5373 \u5bf9\u8c61.\u65b9\u6cd5\u8c03\u7528(...) \u7b49\u4ef7\u4e8e \u51fd\u6570\u8c03\u7528(&\u5bf9\u8c61, ..) \u3002 \u77e5\u9053\u8fd9\u4e2a\u4e4b\u540e\uff0c\u5f88\u591a C++ \u7684\u4e0a\u5c42\u8bed\u6cd5\u662f\u53ef\u4ee5\u8054\u7cfb\u5230\u4e00\u8d77\u7684\u3002 \u6bd4\u5982\uff1a C++ \u4e2d\u7684 const \u65b9\u6cd5 \uff0c\u5176\u5b9e\u5c31\u662f\u4f20\u9012\u4e86\u4e00\u4e2a const * const \u7c7b\u578b\u7684 this \u6307\u9488\u3002 \u518d\u6bd4\u5982\uff1a static \u65b9\u6cd5\u3002 \u56de\u987e\u4e0b C \u4e2d static \u5173\u952e\u5b57\u7684\u4f5c\u7528\uff1a \u4fee\u9970\u5c40\u90e8\u53d8\u91cf\u7684\u8bdd\uff0c\u5b83\u5176\u5b9e\u5f97\u5230\u201c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u201d\uff0c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u7684\u7279\u70b9\uff1a\u58f0\u660e\u5468\u671f\u7b49\u540c\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u4f5c\u7528\u57df\u88ab\u9650\u5b9a\u5728\u4e86\u51fd\u6570\u4f5c\u7528\u57df\u3002 \u4fee\u9970\u51fd\u6570\uff0c\u5c31\u5f97\u5230\u201c\u5c40\u90e8\u9759\u6001\u51fd\u6570\u201d\uff0c\u5b83\u5176\u5b9e\u548c\u666e\u901a\u51fd\u6570\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u9650\u5b9a\u5728\u6587\u4ef6\u4f5c\u7528\u57df C++ \u4e2d\uff0c static \u5173\u952e\u5b57\u7684\u4f5c\u7528\uff1a \u4fee\u9970\u65b9\u6cd5\u7684\u8bdd\uff0c\u5f97\u5230\u201c\u9759\u6001\u6210\u5458\u65b9\u6cd5\u201d\uff0c\u7b49\u4e8e\u4e8e\u5168\u5c40\u51fd\u6570\uff08\u6362\u8a00\u4e4b\uff0c\u8c03\u7528\u65f6\u4e0d\u4f1a\u4f20\u9012 this \u6307\u9488\uff09\uff0c\u53ea\u4e0d\u8fc7\u88ab\u9650\u5b9a\u5728\u4e86\u7c7b\u4f5c\u7528\u57df\u3002 \u4fee\u9970\u7c7b\u6210\u5458\u7684\u8bdd\uff0c\u5f97\u5230\u4e86\u201c\u9759\u6001\u6210\u5458\u201d\uff0c\u7b49\u540c\u4e8e\u5168\u5c40\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u88ab\u9650\u5b9a\u5728\u7c7b\u4f5c\u7528\u57df","title":"\u5c01\u88c5"},{"location":"Learn_docs/CSAPP_learn_base/readme/","text":"\u53c2\u8003\u8d44\u6599 https://github.com/vonzhou/CSAPP","title":"\u53c2\u8003\u8d44\u6599"},{"location":"Learn_docs/CSAPP_learn_base/readme/#_1","text":"https://github.com/vonzhou/CSAPP","title":"\u53c2\u8003\u8d44\u6599"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/","text":"1.\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38 1.1 \u4fe1\u606f \u6e90\u6587\u4ef6\u7531bit\uff08\u4f4d0,1\uff09\u8868\u793a\uff0c8bit=1\u5b57\u8282\uff0c\u75281\u5b57\u8282\u8868\u793a1\u5b57\u7b26\uff0c32\u4f4d\u7cfb\u7edf4\u5b57\u8282=1\u5b57\u957f\uff0c64\u4f4d\u7cfb\u7edf8\u5b57\u8282=1\u5b57\u957f \u4fe1\u606f\u662f\u7531 bit\u548c\u4e0a\u4e0b\u6587\u4fe1\u606f \u8868\u793a\u7684\uff0c\u540c\u6837\u7684\u5b57\u8282\u5e8f\u5217\u5728\u4e0d\u540c\u7684\u89e3\u91ca\u65b9\u5f0f\u4e0b\u53ef\u4ee5\u8868\u8fbe\u4e0d\u540c\u7684\u4fe1\u606f 1.2 \u7f16\u8bd1\u7cfb\u7edf \u6e90\u6587\u4ef6(\u6587\u672c\u6587\u4ef6.c)--[ \u9884\u5904\u7406\u5668 (cp,\u5bfc\u5305\uff0c\u4fee\u6539\u6e90\u6587\u4ef6)]---> \u6e90\u6587\u4ef6(\u88ab\u4fee\u6539\u7684\u6e90.i)---[ \u7f16\u8bd1\u5668 (ccl,\u4fee\u6539\u4e3a\u6c47\u7f16\u8bed\u8a00)]--> \u6c47\u7f16\u7a0b\u5e8f(\u6c47\u7f16\u6587\u672c\u6587\u4ef6.s)---[ \u6c47\u7f16\u5668 (as)]--> \u673a\u5668\u8bed\u8a00\u6307\u4ee4(\u4e8c\u8fdb\u5236\u6587\u4ef6.o)---[ \u8fde\u63a5\u5668 (ld,\u5408\u5e76\u8c03\u7528\u7684\u6807\u51c6\u5e93\u51fd\u6570\u7684.o\u6587\u4ef6)]---> \u53ef\u6267\u884c\u7a0b\u5e8f 1.3 \u786c\u4ef6\u7ec4\u6210 .c\u6587\u4ef6\u50a8\u5b58\u5728\u78c1\u76d8 io\u7cfb\u7edf\u8f93\u5165-->\u5916\u58f3shell\u63a5\u6536\u8f93\u5165-->\u5c06\u547d\u4ee4\u5b58\u5165\u5bc4\u5b58\u5668-->\u5c06\u547d\u4ee4\u5b58\u5165\u4e3b\u5b58-->\u547d\u4ee4\u7ed3\u675f./hello \u78c1\u76d8\u5c06\u7f16\u8bd1\u597d\u7684\u6570\u636e\u548ccode\u590d\u5236\u5230\u4e3b\u5b58\uff0c\u4e3b\u5b58\u518d\u5c06\u5176\u590d\u5236\u5230\u5bc4\u5b58\u5668\uff0c\u5bc4\u5b58\u5668\u518d\u5c06\u5176\u590d\u5236\u5230io\u663e\u793a\u8bbe\u5907 \u4e0a\u8ff0\u8fc7\u7a0b\u590d\u5236\u8fc7\u7a0b\u5197\u4f59\uff0c\u9ad8\u901f\u7f13\u5b58\u51fa\u73b0\u3002\u5b58\u50a8\u5668\u7ed3\u6784\u5c42\u6b21\u53ef\u4ee5\u5e2e\u52a9\u52a0\u5feb\u6267\u884c\u6548\u7387-- \u4e0a\u4e00\u5c42\u7684\u5b58\u50a8\u5668\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u5b58\u50a8\u5668\u7684\u9ad8\u901f\u7f13\u5b58 \u3002\u4f20\u7edf\u4e2d\uff0c\u5bc4\u5b58\u5668\u5c31\u662f\u4e3b\u5b58\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u5bc4\u5b58\u5668\u5bb9\u91cf\u4e0b\uff0c\u6240\u4ee5\u8bfb\u53d6\u901f\u5ea6\u5feb\u3002\u65b0\u578b\u7684\u5b58\u50a8\u5668\u7ed3\u6784\u662f\u5728\u5bc4\u5b58\u5668\u4e0b\u591a\u4e86\u4e09\u5c42 L1\uff0cL2\uff0cL3 \u7684\u9ad8\u901f\u7f13\u5b58 \u7f51\u7edc\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u7279\u6b8a\u7684io\u8bbe\u5907 1.4 \u64cd\u4f5c\u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf\u662f\u8f6f\u4ef6\u4e0e\u786c\u4ef6\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8f6f\u4ef6\u5bf9\u786c\u4ef6\u7684\u62bd\u8c61\u8868\u793a\uff0c\u63d0\u4f9b\u6709\u6548\u7b80\u5355\u7684\u7ba1\u7406\u786c\u4ef6\u7684\u65b9\u6cd5\u3002\u5176\u4e2d\u5305\u62ec \u5c06io\u8bbe\u5907\u62bd\u8c61\u4e3a\u6587\u4ef6\uff0c\u5c06io\u8bbe\u5907\u548c\u4e3b\u5b58\u62bd\u8c61\u4e3a\u865a\u62df\u5b58\u50a8\u5668\uff0c\u5c06io\u8bbe\u5907\u3001\u4e3b\u5b58\u3001\u5904\u7406\u5668cpu\u62bd\u8c61\u4e3a\u8fdb\u7a0b \u3002 1.5 \u8fdb\u7a0b\uff0c\u5e76\u53d1\uff0c\u5e76\u884c \u4e00\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u662f\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u591a\u4e2a\u8fdb\u7a0b\u6307\u4ee4\u8fdb\u884c \u4ea4\u9519\u6267\u884c \u5b9e\u73b0\u7684 \u865a\u62df\u5b58\u50a8\u5668-\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u63d0\u4f9b\u5b58\u50a8\u552f\u4e00\u7684\u5047\u8c61\u3002\u5305\u62ec\u4e86\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e\u3001\u5806\uff08\u6807\u51c6\u51fd\u6570\u5e93\uff09\u3001\u5171\u4eab\u5e93\u3001\u7528\u6237\u6808\uff08\u8fd0\u884c\u65f6\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\uff09","title":"1.\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#1","text":"","title":"1.\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#11","text":"\u6e90\u6587\u4ef6\u7531bit\uff08\u4f4d0,1\uff09\u8868\u793a\uff0c8bit=1\u5b57\u8282\uff0c\u75281\u5b57\u8282\u8868\u793a1\u5b57\u7b26\uff0c32\u4f4d\u7cfb\u7edf4\u5b57\u8282=1\u5b57\u957f\uff0c64\u4f4d\u7cfb\u7edf8\u5b57\u8282=1\u5b57\u957f \u4fe1\u606f\u662f\u7531 bit\u548c\u4e0a\u4e0b\u6587\u4fe1\u606f \u8868\u793a\u7684\uff0c\u540c\u6837\u7684\u5b57\u8282\u5e8f\u5217\u5728\u4e0d\u540c\u7684\u89e3\u91ca\u65b9\u5f0f\u4e0b\u53ef\u4ee5\u8868\u8fbe\u4e0d\u540c\u7684\u4fe1\u606f","title":"1.1 \u4fe1\u606f"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#12","text":"\u6e90\u6587\u4ef6(\u6587\u672c\u6587\u4ef6.c)--[ \u9884\u5904\u7406\u5668 (cp,\u5bfc\u5305\uff0c\u4fee\u6539\u6e90\u6587\u4ef6)]---> \u6e90\u6587\u4ef6(\u88ab\u4fee\u6539\u7684\u6e90.i)---[ \u7f16\u8bd1\u5668 (ccl,\u4fee\u6539\u4e3a\u6c47\u7f16\u8bed\u8a00)]--> \u6c47\u7f16\u7a0b\u5e8f(\u6c47\u7f16\u6587\u672c\u6587\u4ef6.s)---[ \u6c47\u7f16\u5668 (as)]--> \u673a\u5668\u8bed\u8a00\u6307\u4ee4(\u4e8c\u8fdb\u5236\u6587\u4ef6.o)---[ \u8fde\u63a5\u5668 (ld,\u5408\u5e76\u8c03\u7528\u7684\u6807\u51c6\u5e93\u51fd\u6570\u7684.o\u6587\u4ef6)]---> \u53ef\u6267\u884c\u7a0b\u5e8f","title":"1.2 \u7f16\u8bd1\u7cfb\u7edf"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#13","text":".c\u6587\u4ef6\u50a8\u5b58\u5728\u78c1\u76d8 io\u7cfb\u7edf\u8f93\u5165-->\u5916\u58f3shell\u63a5\u6536\u8f93\u5165-->\u5c06\u547d\u4ee4\u5b58\u5165\u5bc4\u5b58\u5668-->\u5c06\u547d\u4ee4\u5b58\u5165\u4e3b\u5b58-->\u547d\u4ee4\u7ed3\u675f./hello \u78c1\u76d8\u5c06\u7f16\u8bd1\u597d\u7684\u6570\u636e\u548ccode\u590d\u5236\u5230\u4e3b\u5b58\uff0c\u4e3b\u5b58\u518d\u5c06\u5176\u590d\u5236\u5230\u5bc4\u5b58\u5668\uff0c\u5bc4\u5b58\u5668\u518d\u5c06\u5176\u590d\u5236\u5230io\u663e\u793a\u8bbe\u5907 \u4e0a\u8ff0\u8fc7\u7a0b\u590d\u5236\u8fc7\u7a0b\u5197\u4f59\uff0c\u9ad8\u901f\u7f13\u5b58\u51fa\u73b0\u3002\u5b58\u50a8\u5668\u7ed3\u6784\u5c42\u6b21\u53ef\u4ee5\u5e2e\u52a9\u52a0\u5feb\u6267\u884c\u6548\u7387-- \u4e0a\u4e00\u5c42\u7684\u5b58\u50a8\u5668\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u5b58\u50a8\u5668\u7684\u9ad8\u901f\u7f13\u5b58 \u3002\u4f20\u7edf\u4e2d\uff0c\u5bc4\u5b58\u5668\u5c31\u662f\u4e3b\u5b58\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u5bc4\u5b58\u5668\u5bb9\u91cf\u4e0b\uff0c\u6240\u4ee5\u8bfb\u53d6\u901f\u5ea6\u5feb\u3002\u65b0\u578b\u7684\u5b58\u50a8\u5668\u7ed3\u6784\u662f\u5728\u5bc4\u5b58\u5668\u4e0b\u591a\u4e86\u4e09\u5c42 L1\uff0cL2\uff0cL3 \u7684\u9ad8\u901f\u7f13\u5b58 \u7f51\u7edc\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u7279\u6b8a\u7684io\u8bbe\u5907","title":"1.3 \u786c\u4ef6\u7ec4\u6210"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#14","text":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u8f6f\u4ef6\u4e0e\u786c\u4ef6\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8f6f\u4ef6\u5bf9\u786c\u4ef6\u7684\u62bd\u8c61\u8868\u793a\uff0c\u63d0\u4f9b\u6709\u6548\u7b80\u5355\u7684\u7ba1\u7406\u786c\u4ef6\u7684\u65b9\u6cd5\u3002\u5176\u4e2d\u5305\u62ec \u5c06io\u8bbe\u5907\u62bd\u8c61\u4e3a\u6587\u4ef6\uff0c\u5c06io\u8bbe\u5907\u548c\u4e3b\u5b58\u62bd\u8c61\u4e3a\u865a\u62df\u5b58\u50a8\u5668\uff0c\u5c06io\u8bbe\u5907\u3001\u4e3b\u5b58\u3001\u5904\u7406\u5668cpu\u62bd\u8c61\u4e3a\u8fdb\u7a0b \u3002","title":"1.4 \u64cd\u4f5c\u7cfb\u7edf"},{"location":"Learn_docs/CSAPP_learn_base/chapter1/readme/#15","text":"\u4e00\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u662f\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u591a\u4e2a\u8fdb\u7a0b\u6307\u4ee4\u8fdb\u884c \u4ea4\u9519\u6267\u884c \u5b9e\u73b0\u7684 \u865a\u62df\u5b58\u50a8\u5668-\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u63d0\u4f9b\u5b58\u50a8\u552f\u4e00\u7684\u5047\u8c61\u3002\u5305\u62ec\u4e86\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e\u3001\u5806\uff08\u6807\u51c6\u51fd\u6570\u5e93\uff09\u3001\u5171\u4eab\u5e93\u3001\u7528\u6237\u6808\uff08\u8fd0\u884c\u65f6\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\uff09","title":"1.5 \u8fdb\u7a0b\uff0c\u5e76\u53d1\uff0c\u5e76\u884c"},{"location":"Learn_docs/CSAPP_learn_base/chapter2/readme/","text":"\u4fe1\u606f\u7684\u5904\u7406\u548c\u8868\u793a 2.1 \u4fe1\u606f\u5b58\u50a8 8 bit = 1 byte \u4e00\u5b57\u8282\u662f\u6700\u5c0f\u7684\u53ef\u5bfb\u5740\u7684\u5b58\u50a8\u5668\u5355\u5143\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u503c\u57df\u4e3a00000000-11111111\uff0c\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a0-255\uff0c\u8f6c\u6362\u4e3a16\u8fdb\u5236\u4e3a00-FF \u5341\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u4e92\u76f8\u8f6c\u5316 python\u4ee3\u7801 \u4e8c\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u76f8\u4e92\u8f6c\u5316\uff0c\u5c06\u5341\u516d\u8fdb\u5236\u7684\u6bcf\u4e00\u4e2a\u4f4d\uff0c\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\uff0c\u6839\u636e\u5341\u8fdb\u5236\u7684\u6570\u5b57\u8f6c\u6362\u4e3a\u56db\u4e2a\u4f4d\u7684\u4e8c\u8fdb\u5236\uff0c\u5341\u516d\u8fdb\u5236\u7684\u4e00\u4f4d\u8868\u793a16\uff0c\u800c\u4e8c\u8fdb\u5236\u7684\u56db\u4e2a\u4f4d2^4\u4e5f\u7b49\u4e8e16\uff0c\u6240\u4ee50xFFFFFFFB => 1111 1111 1111 1111 1111 1111 1111 1011 \u5b57\u957f\uff0c\u8868\u660e\u4e86\u6574\u6570\u548c\u6307\u9488\u6570\u636e\u7684\u6807\u79f0\u5927\u5c0f\uff0c\u51b3\u5b9a\u4e86\u865a\u62df\u7a7a\u95f4\u5730\u5740\u7684\u6700\u5927\u5927\u5c0f\uff0c32\u4f4d\u7684\u7cfb\u7edf\uff0c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e3a2\u768431\u6b21\u65b9bit\uff0c\u4e5f\u5c31\u662f4GB\u3002 C\u8bed\u8a00\u4e2dchar 1B,short 2B, int 4B, \u957f\u6574\u6570\u548c\u6307\u9488\u957f\u5ea6\u7b49\u4e8e\u673a\u5668\u7684\u5b57\u957f\uff08\u8fd9\u91cc8\uff09,float=4B, double=8B \u5927\u5c0f\u7aef \uff1a 0x12345678 \u600e\u4e48\u653e\u7f6e\u5230\u5185\u5b58\u4e2d\uff1f \u5c06\u6570\u636e\u7684\u4f4e\u4f4d\uff0878\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u653e\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c0f\u7aef\u65b9\u5f0f\uff0clittle endian \u5c06\u6570\u636e\u7684\u9ad8\u4f4d\uff0812\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u5f0f\uff0c\u5927\u7aef\u65b9\u5f0f\uff0cbig endian x86 \u82af\u7247\u3001ARM \u9ed8\u8ba4 \u5c0f\u7aef\u65b9\u5f0f\u3002","title":"\u4fe1\u606f\u7684\u5904\u7406\u548c\u8868\u793a"},{"location":"Learn_docs/CSAPP_learn_base/chapter2/readme/#_1","text":"","title":"\u4fe1\u606f\u7684\u5904\u7406\u548c\u8868\u793a"},{"location":"Learn_docs/CSAPP_learn_base/chapter2/readme/#21","text":"8 bit = 1 byte \u4e00\u5b57\u8282\u662f\u6700\u5c0f\u7684\u53ef\u5bfb\u5740\u7684\u5b58\u50a8\u5668\u5355\u5143\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u503c\u57df\u4e3a00000000-11111111\uff0c\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a0-255\uff0c\u8f6c\u6362\u4e3a16\u8fdb\u5236\u4e3a00-FF \u5341\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u4e92\u76f8\u8f6c\u5316 python\u4ee3\u7801 \u4e8c\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u76f8\u4e92\u8f6c\u5316\uff0c\u5c06\u5341\u516d\u8fdb\u5236\u7684\u6bcf\u4e00\u4e2a\u4f4d\uff0c\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\uff0c\u6839\u636e\u5341\u8fdb\u5236\u7684\u6570\u5b57\u8f6c\u6362\u4e3a\u56db\u4e2a\u4f4d\u7684\u4e8c\u8fdb\u5236\uff0c\u5341\u516d\u8fdb\u5236\u7684\u4e00\u4f4d\u8868\u793a16\uff0c\u800c\u4e8c\u8fdb\u5236\u7684\u56db\u4e2a\u4f4d2^4\u4e5f\u7b49\u4e8e16\uff0c\u6240\u4ee50xFFFFFFFB => 1111 1111 1111 1111 1111 1111 1111 1011 \u5b57\u957f\uff0c\u8868\u660e\u4e86\u6574\u6570\u548c\u6307\u9488\u6570\u636e\u7684\u6807\u79f0\u5927\u5c0f\uff0c\u51b3\u5b9a\u4e86\u865a\u62df\u7a7a\u95f4\u5730\u5740\u7684\u6700\u5927\u5927\u5c0f\uff0c32\u4f4d\u7684\u7cfb\u7edf\uff0c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e3a2\u768431\u6b21\u65b9bit\uff0c\u4e5f\u5c31\u662f4GB\u3002 C\u8bed\u8a00\u4e2dchar 1B,short 2B, int 4B, \u957f\u6574\u6570\u548c\u6307\u9488\u957f\u5ea6\u7b49\u4e8e\u673a\u5668\u7684\u5b57\u957f\uff08\u8fd9\u91cc8\uff09,float=4B, double=8B \u5927\u5c0f\u7aef \uff1a 0x12345678 \u600e\u4e48\u653e\u7f6e\u5230\u5185\u5b58\u4e2d\uff1f \u5c06\u6570\u636e\u7684\u4f4e\u4f4d\uff0878\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u653e\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c0f\u7aef\u65b9\u5f0f\uff0clittle endian \u5c06\u6570\u636e\u7684\u9ad8\u4f4d\uff0812\uff09\uff0c\u653e\u5230\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u65b9\u5f0f\uff0c\u5927\u7aef\u65b9\u5f0f\uff0cbig endian x86 \u82af\u7247\u3001ARM \u9ed8\u8ba4 \u5c0f\u7aef\u65b9\u5f0f\u3002","title":"2.1 \u4fe1\u606f\u5b58\u50a8"},{"location":"Learn_docs/General/readme/","text":"\u57fa\u7840\u77e5\u8bc6 \u6570\u5b66 \u7ebf\u6027\u4ee3\u6570 \u5411\u91cf\uff0c\u77e9\u9635\uff0c\u8fd0\u7b97\uff0c \u8303\u6570 \uff0c \u7279\u5f81\u5411\u91cf \uff0c \u7279\u5f81\u503c \u9ad8\u6570 \u5bfc\u6570\u3001\u5fae\u5206\u3001\u79ef\u5206 \u68af\u5ea6 \u6cf0\u52d2\u5c55\u5f00\u516c\u5f0f \u6982\u7387\u8bba ---\u201cb\u7ad9\u89c6\u9891\uff1a\u4e00\u4e2a\u5c0f\u65f6\u5feb\u901f\u56de\u987e\u6982\u7387\u8bba\u201d python \u5ed6\u96ea\u5cf0\u5b98\u65b9 https://www.liaoxuefeng.com/wiki/1016959663602400/1183249464292448 \u6570\u636e\u5904\u7406\u5b9e\u6218 \u5229\u7528python\u8fdb\u884c\u6570\u636e\u5206\u6790 https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_version \u673a\u5668\u5b66\u4e60\u7406\u8bba\u5165\u95e8 \u674e\u822a-\u7edf\u8ba1\u5b66\u4e60 \u4e0d\u7528\u770b\u6bcf\u7ae0\uff0c\u4e0d\u7528\u4ece\u96f6\u9020\u8f6e\u5b50 \u624b\u63a8\u516c\u5f0f \uff0c\u659c\u4f53\u7ae0\u8282\u5fc5\u987b\u624b\u63a8\u516c\u5f0f \u53ea\u770b\u7b2c1,2, 4 , 5 , 6\u903b\u8f91\u56de\u5f52 , 8 \uff0c xgboost \u5218\u5efa\u5e73\u535a\u5ba2 \u7edf\u8ba1\u5b66\u4e60\u4e0d\u4f1a\u7684\u53ef\u4ee5\u7528\u8fd9\u4e2ablog\u8fdb\u884c\u8865\u5145https://www.cnblogs.com/pinard/category/894692.html \u673a\u5668\u5b66\u4e60\u5b9e\u6218\u5165\u95e8 \u963f\u91cc\u4e91\u5929\u6c60\u5927\u8d5b\u8d5b\u9898\u89e3\u6790\uff08\u673a\u5668\u5b66\u4e60\u7bc7\uff09 \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8 \u90b1\u8001\u5e08\u7684\u4e66ipad notability NLP cs224 P1-P5,P8,9 P11 \u6587\u672c\u5206\u7c7b \u6587\u672c\u5339\u914d \u5e8f\u5217\u6807\u6ce8 \u6587\u672c\u751f\u6210 CV \u56fe\u50cf\u7406\u89e3 \u5206\u7c7b\uff0c\u68c0\u6d4b\uff0c\u5206\u5272\uff0c\u8ffd\u8e2a \u56fe\u50cf\u751f\u6210- GAN \u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\u5165\u95e8 NLP \u81ea\u7136\u8bed\u8a00\u5904\u7406-\u65b0\u95fb\u6587\u672c\u5206\u7c7b CV-\u8857\u666f\u7b26\u53f7\u8bc6\u522b \u9762\u8bd5\u9898 \u767e\u9762\u673a\u5668\u5b66\u4e60","title":"Readme"},{"location":"Learn_docs/General/readme/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"Learn_docs/General/readme/#_2","text":"","title":"\u6570\u5b66"},{"location":"Learn_docs/General/readme/#_3","text":"\u5411\u91cf\uff0c\u77e9\u9635\uff0c\u8fd0\u7b97\uff0c \u8303\u6570 \uff0c \u7279\u5f81\u5411\u91cf \uff0c \u7279\u5f81\u503c","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"Learn_docs/General/readme/#_4","text":"\u5bfc\u6570\u3001\u5fae\u5206\u3001\u79ef\u5206 \u68af\u5ea6 \u6cf0\u52d2\u5c55\u5f00\u516c\u5f0f \u6982\u7387\u8bba ---\u201cb\u7ad9\u89c6\u9891\uff1a\u4e00\u4e2a\u5c0f\u65f6\u5feb\u901f\u56de\u987e\u6982\u7387\u8bba\u201d","title":"\u9ad8\u6570"},{"location":"Learn_docs/General/readme/#python","text":"","title":"python"},{"location":"Learn_docs/General/readme/#_5","text":"https://www.liaoxuefeng.com/wiki/1016959663602400/1183249464292448","title":"\u5ed6\u96ea\u5cf0\u5b98\u65b9"},{"location":"Learn_docs/General/readme/#_6","text":"\u5229\u7528python\u8fdb\u884c\u6570\u636e\u5206\u6790 https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_version","title":"\u6570\u636e\u5904\u7406\u5b9e\u6218"},{"location":"Learn_docs/General/readme/#_7","text":"","title":"\u673a\u5668\u5b66\u4e60\u7406\u8bba\u5165\u95e8"},{"location":"Learn_docs/General/readme/#-","text":"\u4e0d\u7528\u770b\u6bcf\u7ae0\uff0c\u4e0d\u7528\u4ece\u96f6\u9020\u8f6e\u5b50 \u624b\u63a8\u516c\u5f0f \uff0c\u659c\u4f53\u7ae0\u8282\u5fc5\u987b\u624b\u63a8\u516c\u5f0f \u53ea\u770b\u7b2c1,2, 4 , 5 , 6\u903b\u8f91\u56de\u5f52 , 8 \uff0c xgboost","title":"\u674e\u822a-\u7edf\u8ba1\u5b66\u4e60"},{"location":"Learn_docs/General/readme/#_8","text":"\u7edf\u8ba1\u5b66\u4e60\u4e0d\u4f1a\u7684\u53ef\u4ee5\u7528\u8fd9\u4e2ablog\u8fdb\u884c\u8865\u5145https://www.cnblogs.com/pinard/category/894692.html","title":"\u5218\u5efa\u5e73\u535a\u5ba2"},{"location":"Learn_docs/General/readme/#_9","text":"","title":"\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u5165\u95e8"},{"location":"Learn_docs/General/readme/#_10","text":"","title":"\u963f\u91cc\u4e91\u5929\u6c60\u5927\u8d5b\u8d5b\u9898\u89e3\u6790\uff08\u673a\u5668\u5b66\u4e60\u7bc7\uff09"},{"location":"Learn_docs/General/readme/#ipad-notability","text":"","title":"\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8 \u90b1\u8001\u5e08\u7684\u4e66ipad notability"},{"location":"Learn_docs/General/readme/#nlp-cs224-p1-p5p89-p11","text":"\u6587\u672c\u5206\u7c7b \u6587\u672c\u5339\u914d \u5e8f\u5217\u6807\u6ce8 \u6587\u672c\u751f\u6210","title":"NLP cs224 P1-P5,P8,9 P11"},{"location":"Learn_docs/General/readme/#cv","text":"\u56fe\u50cf\u7406\u89e3 \u5206\u7c7b\uff0c\u68c0\u6d4b\uff0c\u5206\u5272\uff0c\u8ffd\u8e2a \u56fe\u50cf\u751f\u6210- GAN","title":"CV"},{"location":"Learn_docs/General/readme/#_11","text":"","title":"\u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\u5165\u95e8"},{"location":"Learn_docs/General/readme/#nlp-","text":"","title":"NLP \u81ea\u7136\u8bed\u8a00\u5904\u7406-\u65b0\u95fb\u6587\u672c\u5206\u7c7b"},{"location":"Learn_docs/General/readme/#cv-","text":"","title":"CV-\u8857\u666f\u7b26\u53f7\u8bc6\u522b"},{"location":"Learn_docs/General/readme/#_12","text":"","title":"\u9762\u8bd5\u9898"},{"location":"Learn_docs/General/readme/#_13","text":"","title":"\u767e\u9762\u673a\u5668\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/","text":"\u7b2c\u4e00\u7ae0 \u7edf\u8ba1\u5b66\u4e60\u53ca\u76d1\u7763\u5b66\u4e60\u6982\u8bba \u7edf\u8ba1\u5b66\u4e60\u7684\u5206\u7c7b \u76d1\u7763\u5b66\u4e60 \u672c\u8d28\u662f\u5b66\u4e60\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04\u89c4\u5f8b\uff0c\u8be5\u6620\u5c04\u7531\u6a21\u578b\u6765\u8868\u793a\uff0c\u6700\u597d\u7684\u6a21\u578b\u5c5e\u4e8e\u6620\u5c04\u7a7a\u95f4\uff0c\u8be5\u7a7a\u95f4\u4e5f\u6210\u4e3a\u5047\u8bbe\u7a7a\u95f4\u3002 \u5047\u8bbe\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u968f\u673a\u53d8\u91cfX\uff0cY\uff0c\u9075\u5faa\u8054\u5408\u6982\u7387\u5206\u5e03 P(X,Y) \uff0c\u9884\u6d4b\u53ef\u5199\u4f5c P(y|x) ,or y=f(x) \u65e0\u76d1\u7763\u5b66\u4e60 \u672c\u8d28\u662f\u5b66\u4e60\u6570\u636e\u4e2d\u5fc3\u7684\u7edf\u8ba1\u89c4\u5f8b\u6216\u6f5c\u5728\u7ed3\u6784 \u5f3a\u5316\u5b66\u4e60 \u534a\u76d1\u7763\u4e0e\u4e3b\u52a8\u5b66\u4e60 \u8d1d\u53f6\u65af\u5b66\u4e60 \u672c\u8d28\u662f\u5229\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\uff0c\u8ba1\u7b97\u5728\u7ed9\u5b9a\u6570\u636e\u6761\u4ef6\u4e0b\u6a21\u578b\u7684\u6761\u4ef6\u6982\u7387\uff0c\u5373\u540e\u9a8c\u6982\u7387 \u8d1d\u53f6\u65af\u4f30\u8ba1\u548c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u5728\u601d\u60f3\u4e0a\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u4ee3\u8868\u7edf\u8ba1\u5b66\u4e2d\u8d1d\u53f6\u65af\u5b66\u6d3e\u548c\u7edf\u8ba1\u5b66\u6d3e\u5bf9\u7edf\u8ba1\u7684\u4e0d\u540c\u8ba4\u8bc6\uff1f\uff1f\uff1f \u5047\u8bbe\u5148\u9a8c\u5206\u5e03\u662f\u5747\u5300\u5206\u5e03\uff0c\u53bb\u540e\u9a8c\u6982\u7387\u6700\u5927\uff0c\u5c31\u80fd\u4ece\u8d1d\u53f6\u65af\u4f30\u8ba1\u5f97\u5230\u6781\u5927\u4f3c\u7136\u4f30\u8ba1 \u4e0a\u4e00\u70b9\u4e0d\u61c2\u7684\u53ef\u53c2\u7167 https://www.cnblogs.com/sylvanas2012/p/5058065.html \u6838\u65b9\u6cd5 \u7ebf\u6027\u5230\u975e\u7ebf\u6027\uff1a\u6c42\u6620\u5c04-->\u6c42\u6620\u5c04\u540e\u7684\u5185\u79ef\u3002 \u6838\u51fd\u6570\u76f4\u63a5\u5b9a\u4e49\u5185\u79ef\uff0c\u5b8c\u6210\u6620\u5c04 \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20 \u6a21\u578b \u6240\u8981\u5b66\u4e60\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u6216\u8005\u51b3\u7b56\u51fd\u6570\uff0c\u5373\u786e\u5b9a\u5047\u8bbe\u7a7a\u95f4\u3002 \u7b56\u7565 \u6309\u7167\u600e\u6837\u7684\u51c6\u5219\u5728\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u62e9\u6700\u4f18\u6a21\u578b \u635f\u5931\u51fd\u6570--\u53ea\u80fd\u5f97\u5230\u7ecf\u9a8c\u635f\u5931\uff0c\u6837\u672c\u91cf\u5c0f\u65f6\uff0c\u7ecf\u9a8c\u635f\u5931\u4e0d\u80fd\u4ee3\u8868\u771f\u6b63\u7684\u671f\u671b\u98ce\u9669\uff0c\u4f7f\u7528\u6b63\u5219\u5316\u5bf9\u7ecf\u9a8c\u635f\u5931\u8fdb\u884c\u4f18\u5316=\u7ed3\u6784\u98ce\u9669\uff1a \u00b7 \u8fc7\u62df\u5408 \u8bad\u7ec3\u8bef\u5dee\u9010\u6e10\u51cf\u5c0f\u7136\u800c\u6d4b\u8bd5\u8bef\u5dee\u5c06\u5148\u51cf\u5c0f\u540e\u589e\u5927 \u00b7 \u6b63\u5219\u5316\u5305\u62ec\u4e24\u9879\uff0c\u4e00\u4e2a\u51fd\u6570\u4e3a\u6a21\u578b\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u4e2a\u662f\u8d85\u53c2\u6570\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u7f13\u89e3\u8fc7\u62df\u5408\uff08\u6a21\u578b\u8d8a\u590d\u6742\uff0c\u6b63\u5219\u5316\u9879\u8d8a\u5927\uff0c\u5bf9\u4e8e\u635f\u5931\u51fd\u6570\u7684\u60e9\u7f5a\u4e5f\u5c31\u8d8a\u5927\uff0c\u53ef\u4ee5\u8fbe\u5230\u7531\u4e8e\u6a21\u578b\u590d\u6742\u5ea6\u9ad8\u800c\u9020\u6210\u7684\u8fc7\u62df\u5408\u73b0\u8c61\uff09 \u00b7 \u4ea4\u53c9\u9a8c\u8bc1 \u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u6d4b\u8bd5\u96c6 \u7b97\u6cd5 \u53ef\u53c2\u8003\u8d44\u6599 https://zhuanlan.zhihu.com/p/35141478","title":"\u7b2c\u4e00\u7ae0 \u7edf\u8ba1\u5b66\u4e60\u53ca\u76d1\u7763\u5b66\u4e60\u6982\u8bba"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_1","text":"","title":"\u7b2c\u4e00\u7ae0 \u7edf\u8ba1\u5b66\u4e60\u53ca\u76d1\u7763\u5b66\u4e60\u6982\u8bba"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_2","text":"","title":"\u7edf\u8ba1\u5b66\u4e60\u7684\u5206\u7c7b"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_3","text":"\u672c\u8d28\u662f\u5b66\u4e60\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04\u89c4\u5f8b\uff0c\u8be5\u6620\u5c04\u7531\u6a21\u578b\u6765\u8868\u793a\uff0c\u6700\u597d\u7684\u6a21\u578b\u5c5e\u4e8e\u6620\u5c04\u7a7a\u95f4\uff0c\u8be5\u7a7a\u95f4\u4e5f\u6210\u4e3a\u5047\u8bbe\u7a7a\u95f4\u3002 \u5047\u8bbe\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u968f\u673a\u53d8\u91cfX\uff0cY\uff0c\u9075\u5faa\u8054\u5408\u6982\u7387\u5206\u5e03 P(X,Y) \uff0c\u9884\u6d4b\u53ef\u5199\u4f5c P(y|x) ,or y=f(x)","title":"\u76d1\u7763\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_4","text":"\u672c\u8d28\u662f\u5b66\u4e60\u6570\u636e\u4e2d\u5fc3\u7684\u7edf\u8ba1\u89c4\u5f8b\u6216\u6f5c\u5728\u7ed3\u6784","title":"\u65e0\u76d1\u7763\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_5","text":"","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_6","text":"","title":"\u534a\u76d1\u7763\u4e0e\u4e3b\u52a8\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_7","text":"\u672c\u8d28\u662f\u5229\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\uff0c\u8ba1\u7b97\u5728\u7ed9\u5b9a\u6570\u636e\u6761\u4ef6\u4e0b\u6a21\u578b\u7684\u6761\u4ef6\u6982\u7387\uff0c\u5373\u540e\u9a8c\u6982\u7387 \u8d1d\u53f6\u65af\u4f30\u8ba1\u548c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u5728\u601d\u60f3\u4e0a\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u4ee3\u8868\u7edf\u8ba1\u5b66\u4e2d\u8d1d\u53f6\u65af\u5b66\u6d3e\u548c\u7edf\u8ba1\u5b66\u6d3e\u5bf9\u7edf\u8ba1\u7684\u4e0d\u540c\u8ba4\u8bc6\uff1f\uff1f\uff1f \u5047\u8bbe\u5148\u9a8c\u5206\u5e03\u662f\u5747\u5300\u5206\u5e03\uff0c\u53bb\u540e\u9a8c\u6982\u7387\u6700\u5927\uff0c\u5c31\u80fd\u4ece\u8d1d\u53f6\u65af\u4f30\u8ba1\u5f97\u5230\u6781\u5927\u4f3c\u7136\u4f30\u8ba1 \u4e0a\u4e00\u70b9\u4e0d\u61c2\u7684\u53ef\u53c2\u7167 https://www.cnblogs.com/sylvanas2012/p/5058065.html","title":"\u8d1d\u53f6\u65af\u5b66\u4e60"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_8","text":"\u7ebf\u6027\u5230\u975e\u7ebf\u6027\uff1a\u6c42\u6620\u5c04-->\u6c42\u6620\u5c04\u540e\u7684\u5185\u79ef\u3002 \u6838\u51fd\u6570\u76f4\u63a5\u5b9a\u4e49\u5185\u79ef\uff0c\u5b8c\u6210\u6620\u5c04","title":"\u6838\u65b9\u6cd5"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_9","text":"","title":"\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u4e09\u8981\u7d20"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_10","text":"\u6240\u8981\u5b66\u4e60\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u6216\u8005\u51b3\u7b56\u51fd\u6570\uff0c\u5373\u786e\u5b9a\u5047\u8bbe\u7a7a\u95f4\u3002","title":"\u6a21\u578b"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_11","text":"\u6309\u7167\u600e\u6837\u7684\u51c6\u5219\u5728\u5047\u8bbe\u7a7a\u95f4\u4e2d\u9009\u62e9\u6700\u4f18\u6a21\u578b \u635f\u5931\u51fd\u6570--\u53ea\u80fd\u5f97\u5230\u7ecf\u9a8c\u635f\u5931\uff0c\u6837\u672c\u91cf\u5c0f\u65f6\uff0c\u7ecf\u9a8c\u635f\u5931\u4e0d\u80fd\u4ee3\u8868\u771f\u6b63\u7684\u671f\u671b\u98ce\u9669\uff0c\u4f7f\u7528\u6b63\u5219\u5316\u5bf9\u7ecf\u9a8c\u635f\u5931\u8fdb\u884c\u4f18\u5316=\u7ed3\u6784\u98ce\u9669\uff1a \u00b7 \u8fc7\u62df\u5408 \u8bad\u7ec3\u8bef\u5dee\u9010\u6e10\u51cf\u5c0f\u7136\u800c\u6d4b\u8bd5\u8bef\u5dee\u5c06\u5148\u51cf\u5c0f\u540e\u589e\u5927 \u00b7 \u6b63\u5219\u5316\u5305\u62ec\u4e24\u9879\uff0c\u4e00\u4e2a\u51fd\u6570\u4e3a\u6a21\u578b\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u4e2a\u662f\u8d85\u53c2\u6570\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u7f13\u89e3\u8fc7\u62df\u5408\uff08\u6a21\u578b\u8d8a\u590d\u6742\uff0c\u6b63\u5219\u5316\u9879\u8d8a\u5927\uff0c\u5bf9\u4e8e\u635f\u5931\u51fd\u6570\u7684\u60e9\u7f5a\u4e5f\u5c31\u8d8a\u5927\uff0c\u53ef\u4ee5\u8fbe\u5230\u7531\u4e8e\u6a21\u578b\u590d\u6742\u5ea6\u9ad8\u800c\u9020\u6210\u7684\u8fc7\u62df\u5408\u73b0\u8c61\uff09 \u00b7 \u4ea4\u53c9\u9a8c\u8bc1 \u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u6d4b\u8bd5\u96c6","title":"\u7b56\u7565"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_12","text":"","title":"\u7b97\u6cd5"},{"location":"Learn_docs/General/lihang-statistics/chapter1_general/readme/#_13","text":"https://zhuanlan.zhihu.com/p/35141478","title":"\u53ef\u53c2\u8003\u8d44\u6599"},{"location":"Learn_docs/diary_learn_quick_note/readme/","text":"\u65e5\u671f note 4.27 csapp_c1 4.28 lihang_statics_c1","title":"Readme"},{"location":"Learn_docs/diary_learn_quick_note/bert_ner/readme/","text":"\u5148\u8fd0\u884clibai--->","title":"Readme"},{"location":"Learn_docs/random/debug/readme/","text":"libai (Pdb) p examples[0] InputExample(guid='train-1', text_a=['1', '9', '6', '6', '\u5e74', '\u51fa', '\u751f', '\uff0c', '\u6c49', '\u65cf', '\uff0c', '\u4e2d', '\u5171', '\u515a', '\u5458', '\uff0c', '\u672c', '\u79d1', '\u5b66', '\u5386', '\uff0c', '\u5de5', '\u7a0b', '\u5e08', '\u3001', '\u7f8e', '\u56fd', '\u9879', '\u76ee', '\u7ba1', '\u7406', '\u534f', '\u4f1a', '\u6ce8', '\u518c', '\u4f1a', '\u5458', '\uff08', 'P', 'M', 'I', 'M', 'e', 'm', 'b', 'e', 'r', '\uff09', '\u3001', '\u6ce8', '\u518c', '\u9879', '\u76ee', '\u7ba1', '\u7406', '\u4e13', '\u5bb6', '\uff08', 'P', 'M', 'P', '\uff09', '\u3001', '\u9879', '\u76ee', '\u7ecf', '\u7406', '\u3002'], text_b=None, label=['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-RACE', 'I-RACE', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'B-EDU', 'I-EDU', 'I-EDU', 'I-EDU', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'B-ORG', 'I-ORG', 'I-ORG', 'I-ORG', 'I-ORG', 'I-ORG', 'I-ORG', 'I-ORG', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'O', 'O', 'B-TITLE', 'I-TITLE', 'I-TITLE', 'I-TITLE', 'O']) ner (Pdb) p examples[0] { \"guid\": \"train-1\", \"labelstext_a\": [ \"1\", \"9\", \"6\", \"6\", \"\\u5e74\", \"\\u51fa\", \"\\u751f\", \"\\uff0c\", \"\\u6c49\", \"\\u65cf\", \"\\uff0c\", \"\\u4e2d\", \"\\u5171\", \"\\u515a\", \"\\u5458\", \"\\uff0c\", \"\\u672c\", \"\\u79d1\", \"\\u5b66\", \"\\u5386\", \"\\uff0c\", \"\\u5de5\", \"\\u7a0b\", \"\\u5e08\", \"\\u3001\", \"\\u7f8e\", \"\\u56fd\", \"\\u9879\", \"\\u76ee\", \"\\u7ba1\", \"\\u7406\", \"\\u534f\", \"\\u4f1a\", \"\\u6ce8\", \"\\u518c\", \"\\u4f1a\", \"\\u5458\", \"\\uff08\", \"P\", \"M\", \"I\", \"M\", \"e\", \"m\", \"b\", \"e\", \"r\", \"\\uff09\", \"\\u3001\", \"\\u6ce8\", \"\\u518c\", \"\\u9879\", \"\\u76ee\", \"\\u7ba1\", \"\\u7406\", \"\\u4e13\", \"\\u5bb6\", \"\\uff08\", \"P\", \"M\", \"P\", \"\\uff09\", \"\\u3001\", \"\\u9879\", \"\\u76ee\", \"\\u7ecf\", \"\\u7406\", \"\\u3002\" ] } ner (Pdb) p example.text_a ['1', '9', '6', '6', '\u5e74', '\u51fa', '\u751f', '\uff0c', '\u6c49', '\u65cf', '\uff0c', '\u4e2d', '\u5171', '\u515a', '\u5458', '\uff0c', '\u672c', '\u79d1', '\u5b66', '\u5386', '\uff0c', '\u5de5', '\u7a0b', '\u5e08', '\u3001', '\u7f8e', '\u56fd', '\u9879', '\u76ee', '\u7ba1', '\u7406', '\u534f', '\u4f1a', '\u6ce8', '\u518c', '\u4f1a', '\u5458', '\uff08', 'P', 'M', 'I', 'M', 'e', 'm', 'b', 'e', 'r', '\uff09', '\u3001', '\u6ce8', '\u518c', '\u9879', '\u76ee', '\u7ba1', '\u7406', '\u4e13', '\u5bb6', '\uff08', 'P', 'M', 'P', '\uff09', '\u3001', '\u9879', '\u76ee', '\u7ecf', '\u7406', '\u3002'] if isinstance(example.text_a,list): example.text_a = \" \".join(example.text_a) (Pdb) p example.text_a '1 9 6 6 \u5e74 \u51fa \u751f \uff0c \u6c49 \u65cf \uff0c \u4e2d \u5171 \u515a \u5458 \uff0c \u672c \u79d1 \u5b66 \u5386 \uff0c \u5de5 \u7a0b \u5e08 \u3001 \u7f8e \u56fd \u9879 \u76ee \u7ba1 \u7406 \u534f \u4f1a \u6ce8 \u518c \u4f1a \u5458 \uff08 P M I M e m b e r \uff09 \u3001 \u6ce8 \u518c \u9879 \u76ee \u7ba1 \u7406 \u4e13 \u5bb6 \uff08 P M P \uff09 \u3001 \u9879 \u76ee \u7ecf \u7406 \u3002'","title":"Readme"}]}